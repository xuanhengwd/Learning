<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace:名称空间 必须对应接口的全限定名
-->


<mapper namespace="xh.app.mapper.BrandMapper">

    <!--
    id:唯一标识
    type：映射类型，支持别名
    -->
    <resultMap id="brandResultMap" type="brand">

        <!--
                id：完成主键字段的映射
                    column：表的列名
                    property：实体类的属性名
                result：完成一般字段的映射
                    column：表的列名
                    property：实体类的属性名
            -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>



    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>

    <!--    <select id="selectAll" resultType="Brand">
            select id, brand_name as brandName, company_name as companyName, ordered, description, status
            from tb_brand;
        </select>-->

    <!--    <select id="selectAll" resultType="Brand">
            select * from tb_brand;
        </select>-->


    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand
        where id = #{id};
    </select>

    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where status = #{status}
          and company_name like #{companyName}
          and brand_name like #{brandName};
    </select>

    <select id="selectByCondition1" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status!=null">
            and status = #{status}
            </if>
            <if test="companyName!=null and companyName!=''">
            and company_name like #{companyName}</if>
            <if test="brandName!=null and brandName!=''">
            and brand_name like #{brandName}
            </if>
        </where>
        ;
    </select>


    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose>
                <when test="status!=null">
                    status=#{status},
                </when>
                <when test="companyName!=null and companyName!=''">
                    company_name=#{companyName},
                </when>
                <when test="brandName!=null and brandName!=''">
                    brand_name=#{brandName}
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
        </where>
        ;
    </select>

    <!--
    useGeneratedKeys="true" keyProperty="id" :返回主键id
    -->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>

    <update id="update">
        update tb_brand
        <set>
            <if test="brandName!=null and brandName!=''">
                brand_name=#{brandName},
            </if>
            <if test="companyName!=null and companyName!=''">
                company_name=#{companyName},
            </if>
            <if test="ordered!=null">
                ordered=#{ordered},
            </if>
            <if test="description!=null and description!=''">
                description=#{description},
            </if>
            <if test="status!=null">
                status=#{status}
            </if>
        </set>
        where id = #{id};

    </update>


    <delete id="deleteById">

        delete from tb_brand where id=#{id};
    </delete>

    <delete id="deleteByIds">
        delete from tb_brand
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        ;
    </delete>

</mapper>